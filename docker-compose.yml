version: "3.9"

services:
  redis:
    image: redis/redis-stack
    volumes:
      - ./redis:/data
    restart: unless-stopped
    networks:
      - proxy

  bot_rest-proxy:
    image: ${REGISTRY}/${REGISTRY_USER}/efg-bot_rest-proxy:master
    restart: unless-stopped
    env_file:
      - .env
    environment:
      PORT: 3000
      ENV: prod
    networks:
      - proxy

  bot_sender:
    depends_on:
      - redis
      - bot_rest-proxy
    image: ${REGISTRY}/${REGISTRY_USER}/efg-bot_sender:master
    restart: unless-stopped
    env_file:
      - .env
    environment:
      PORT: 3000
      ENV: prod
      REDISHOST: redis
      REDISPORT: 6379
    networks:
      - proxy

  api:
    depends_on:
      - redis
      - bot_sender
    image: ${REGISTRY}/${REGISTRY_USER}/efg-api:master
    restart: unless-stopped
    env_file:
      - .env
    environment:
      PORT: 3000
      ENV: prod
      REDISHOST: redis
      REDISPORT: 6379
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.efg-api.entrypoints=https"
      - "traefik.http.routers.efg-api.tls=true"
      - "traefik.http.routers.efg-api.service=efg-api"
      - "traefik.http.routers.efg-api.rule=Host(`staging-api.epicfreegames.net`)"
      - "traefik.http.services.efg-api.loadbalancer.server.port=3000"
      - "traefik.docker.network=proxy"
    networks:
      - proxy

  dash:
    depends_on:
      - api
    image: ${REGISTRY}/${REGISTRY_USER}/efg-dash:master
    restart: unless-stopped
    env_file:
      - .env
    environment:
      PORT: 3000
      ENV: prod
      REDISHOST: redis
      REDISPORT: 6379
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.efg-dash.entrypoints=https"
      - "traefik.http.routers.efg-dash.tls=true"
      - "traefik.http.routers.efg-dash.service=efg-dash"
      - "traefik.http.routers.efg-dash.rule=Host(`staging-dash.epicfreegames.net`)"
      - "traefik.http.services.efg-dash.loadbalancer.server.port=3000"
      - "traefik.docker.network=proxy"
    networks:
      - proxy

  bot_gateway-proxy:
    depends_on:
      - bot_rest-proxy
    image: ${REGISTRY}/${REGISTRY_USER}/efg-bot_gateway-proxy:master
    restart: unless-stopped
    env_file:
      - .env
    environment:
      PORT: 3000
      ENV: prod
      REDISHOST: redis
      REDISPORT: 6379
    networks:
      - proxy

  bot_bot:
    depends_on:
      - api
      - redis
      - bot_rest-proxy
      - bot_gateway-proxy
    image: ${REGISTRY}/${REGISTRY_USER}/efg-bot_bot:master
    restart: unless-stopped
    env_file:
      - .env
    environment:
      PORT: 3000
      ENV: prod
      REDISHOST: redis
      REDISPORT: 6379
    networks:
      - proxy

networks:
  proxy:
    external: true
