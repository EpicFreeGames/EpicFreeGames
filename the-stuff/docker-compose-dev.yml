version: "3.9"

x-shared-envs: &sharedEnvs
  REDISHOST: redis
  REDISPORT: "6379"
  EFG_API_INTERNAL_BASEURL: http://api:3000/api
  DISCORD_API_BASEURL: https://discord.com/api/v10
  DISCORD_REDIRECT_URL: http://localhost:3010/api/auth/discord-callback
  ENV: Development

x-shared-bot-envs: &sharedBotEnvs
  <<: *sharedEnvs
  EFG_FRONT_BASEURL: https://staging.epicfreegames.net
  LOGO_URL: https://staging.epicfreegames.net/assets/images/logos/Development.png
  REST_PROXY_URL: http://bot_rest-proxy:3000
  REST_PROXY_AUTH: efg-rest-proxy-auth
  BOT_TOKEN: ${BOT_TOKEN}
  EFG_API_BOT_TOKEN: ${EFG_API_BOT_TOKEN}

services:
  mysql:
    image: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=secret
    volumes:
      - mysql:/var/lib/mysql
    ports:
      - "3306:3306"
    restart: always
    healthcheck:
      test: mysql -u root -p secret -e SHOW DATABASES
      interval: 3s
      timeout: 15s
      retries: 5

  redis:
    image: redis
    volumes:
      - redis-data:/data
    restart: always

  api:
    depends_on:
      - redis
    build:
      context: ./api
      dockerfile: Dockerfile.dev
    environment:
      <<: *sharedEnvs
      EFG_API_SECRET: efg-api-secret
      DISCORD_CLIENT_ID: ${DISCORD_CLIENT_ID}
      DISCORD_CLIENT_SECRET: ${DISCORD_CLIENT_SECRET}
      SENDER_AUTH: efg-sender-auth
      SENDER_URL: http://bot_sender:3000
      JWT_ISS: efg-dev-api
      JWT_AUD: efg-dev-api
      JWT_SECRET: efg-api-jwt-secret
      DASH_URL: http://localhost:3001
      DATABASE_URL: ${DATABASE_URL}
    healthcheck:
      test: curl --fail http://api:3000/api/ || exit 1
      interval: 3s
      timeout: 15s
      retries: 5
    restart: always
    volumes:
      - ./api/src:/app/src:r
      - ./api/t10s:/app/t10s:r
    ports:
      - "3010:3000"
    command: "sh -c './wait-for.sh mysql:3306 -- ./wait-for.sh redis:6379 -- yarn prisma db push && yarn dev'"

  dash:
    depends_on:
      - api
      - redis
      - mysql
    build:
      context: ./dash
      dockerfile: Dockerfile.dev
    image: dash/dash
    environment:
      <<: *sharedEnvs
      NEXT_PUBLIC_EFG_API_BASE_URL: http://localhost:3010/api
      NEXT_PUBLIC_EFG_API_WS_URL: ws://localhost:3010/api
    env_file: .env-dev
    volumes:
      - ./dash/src:/app/src:r
    ports:
      - "3001:3000"
    command: "sh -c './wait-for.sh api:3000 -- yarn dev'"

  front:
    build:
      context: ./front
      dockerfile: Dockerfile.dev
    image: front/front
    volumes:
      - ./front/src:/app/src:r
      - ./front/tailwind.config.js:/app/tailwind.config.js:r
    ports:
      - "3000:3000"
    environment:
      EFG_API_BASEURL: http://api:3000/api
      EFG_API_FRONT_TOKEN: ${EFG_API_FRONT_TOKEN}
    command: "sh -c './wait-for.sh api:3000 -- yarn dev'"

  bot_rest-proxy:
    depends_on:
      - api
    build:
      context: ./bot
      args:
        - SCOPE=rest-proxy
    image: bot_rest-proxy
    environment:
      <<: *sharedBotEnvs
    command: "sh -c './wait-for.sh api:3000 -- deno run --watch -A ./src/rest-proxy/mod.ts'"

  bot_sender:
    depends_on:
      - api
      - bot_rest-proxy
    build:
      context: ./bot
      args:
        - SCOPE=sender
    image: bot_sender
    environment:
      <<: *sharedBotEnvs
      WEBHOOK_NAME: Dev-EpicFreeGames
      SENDER_AUTH: efg-sender-auth
    restart: always
    command: "sh -c './wait-for.sh api:3000 -- ./wait-for.sh bot_rest-proxy:3000 -- deno run --watch -A ./src/sender/mod.ts'"

  bot_gateway:
    depends_on:
      - api
      - bot_rest-proxy
    build:
      context: ./bot
      args:
        - SCOPE=gateway
    image: bot_gateway
    environment:
      <<: *sharedBotEnvs
      EVENT_HANDLER_URL: http://bot_event-handler:3000
      EVENT_HANDLER_AUTH: efg-event-handler-auth
    restart: always
    command: "sh -c './wait-for.sh api:3000 -- ./wait-for.sh bot_rest-proxy:3000 -- deno run --watch -A ./src/gateway/mod.ts'"

  bot_event-handler:
    depends_on:
      - api
      - bot_gateway
      - bot_rest-proxy
    build:
      context: ./bot
      args:
        - SCOPE=event-handler
    image: bot_event-handler
    environment:
      <<: *sharedBotEnvs
      WEBHOOK_INTEGRATION_NAME: Dev-EpicFreeGames Notifications
      EVENT_HANDLER_AUTH: efg-event-handler-auth
    restart: always
    volumes:
      - ./bot/src:/app/src:r
    command: "sh -c './wait-for.sh api:3000 -- ./wait-for.sh bot_rest-proxy:3000 -- deno run --watch -A ./src/event-handler/mod.ts'"

volumes:
  redis-data:
  mysql:
