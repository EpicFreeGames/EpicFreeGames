//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.2

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "server")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: i64,
    #[sea_orm(column_type = "Text", nullable)]
    pub webhook_token: Option<String>,
    #[sea_orm(column_type = "Text")]
    pub language_code: String,
    #[sea_orm(column_type = "Text")]
    pub currency_code: String,
    pub created_at: DateTime,
    pub role_id: Option<i64>,
    pub channel_id: Option<i64>,
    pub thread_id: Option<i64>,
    pub webhook_id: Option<i64>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::command_log::Entity")]
    CommandLog,
    #[sea_orm(has_many = "super::sending_log::Entity")]
    SendingLog,
}

impl Related<super::command_log::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::CommandLog.def()
    }
}

impl Related<super::sending_log::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::SendingLog.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
