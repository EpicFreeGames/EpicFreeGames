datasource db {
    url      = env("DB_URL")
    provider = "postgresql"
}

generator client {
    provider = "prisma-client-js"
}

model game {
    id           String       @id @default(cuid())
    name         String       @unique @db.Text
    display_name String       @db.Text
    image_url    String       @db.Text
    start_date   DateTime     @db.Timestamp
    end_date     DateTime     @db.Timestamp
    confirmed    Boolean      @default(false)
    path         String
    store_id     String
    prices       game_price[]
    sends        send[]
}

model game_price {
    id              String @id @default(cuid())
    value           Float
    formatted_value String
    currency_code   String
    game_id         String
    game            game   @relation(fields: [game_id], references: [id], onDelete: Cascade)
}

model discord_server {
    id                 String                @id @default(cuid()) // Db id for the server (used for relations)
    discord_id         String                @unique // Discord's ID for the server
    role_id            String?
    channel_updated_at DateTime?
    channel_id         String?
    thread_id          String?
    webhook_id         String?
    webhook_token      String?
    language_code      String                @default("en")
    currency_code      String                @default("USD")
    created_at         DateTime              @default(now())
    command_logs       discord_command_log[]
    discord_send_logs  discord_send_log[]
}

model discord_command_log {
    id                String          @id @default(cuid())
    command           String
    sender_id         String
    discord_server_id String?
    discord_server    discord_server? @relation(fields: [discord_server_id], references: [id], onDelete: Cascade)
    created_at        DateTime        @default(now())
}

model discord_send_log {
    id                String         @id @default(cuid())
    type              String
    statusCode        Int
    error             String         @db.Text
    success           Boolean
    discord_server_id String
    discord_server    discord_server @relation(fields: [discord_server_id], references: [id], onDelete: Cascade)
    send_id           String
    send              send           @relation(fields: [send_id], references: [id], onDelete: Cascade)
    created_at        DateTime       @default(now())
}

model send {
    id                String             @id @default(cuid())
    created_at        DateTime           @default(now())
    games             game[]
    discord_send_logs discord_send_log[]
}

model user {
    id      String  @id @default(cuid())
    email   String  @unique
    isAdmin Boolean @default(false)
}
