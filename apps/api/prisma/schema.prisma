datasource db {
    url      = env("DATABASE_URL")
    provider = "postgresql"
}

generator client {
    provider = "prisma-client-js"
}

model games {
    id           String       @id
    name         String       @unique @db.Text
    display_name String       @db.Text
    image_url    String       @db.Text
    start_date   DateTime     @db.Timestamptz
    end_date     DateTime     @db.Timestamptz
    confirmed    Boolean      @default(false)
    path         String
    store_id     String
    prices       gamePrices[]
    sending      sendings?    @relation(fields: [sending_id], references: [id])
    sending_id   String?
}

model gamePrices {
    id              String @id
    value           Float
    formatted_value String
    game_id         String
    game            games  @relation(fields: [game_id], references: [id], onDelete: Cascade)
    currency_code   String
}

model servers {
    id            BigInt        @id @unique
    role_id       String?
    channel_id    String?
    thread_id     String?
    webhook_id    String?
    webhook_token String?
    language_code String        @default("en")
    currency_code String        @default("USD")
    created_at    DateTime      @default(now())
    command_logs  commandLogs[]
    sending_logs  sendingLogs[]
}

model commandLogs {
    id         String   @id
    command    String
    sender_id  String
    server_id  BigInt?
    server     servers? @relation(fields: [server_id], references: [id], onDelete: Cascade)
    error      String?  @db.Text
    created_at DateTime @default(now())
}

model sendingLogs {
    id         String   @id
    type       String
    result     String   @db.Text
    success    Boolean
    server_id  BigInt
    server     servers  @relation(fields: [server_id], references: [id], onDelete: Cascade)
    sending    sendings @relation(fields: [sending_id], references: [id], onDelete: Cascade)
    sending_id String
}

model sendings {
    id    String        @id
    games games[]
    logs  sendingLogs[]
}

model users {
    id            String  @id
    identifier    String  @unique
    flags         BigInt
    username      String?
    token_version String
}
